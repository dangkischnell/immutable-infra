pipeline {

  environment {
    AWS_ACCESS_KEY_ID     = credentials('PACKER_AWS_ACCESS_KEY')
    AWS_SECRET_ACCESS_KEY = credentials('PACKER_AWS_SECRET_KEY')
    WORK_SUB_DIR          = 'vm-based/infra/packer'
    JENKINS_USER_ID       = 'user'
    JENKINS_API_TOKEN     = credentials('JENKIN_API_TOKEN')
  }

  agent {
    docker {
      image 'jeduoliveira/terraform-packer-aws-alpine:latest'
    }
  }
  
  stages {
    stage('terraform-apply') {
      options {
        timeout(time: 10, unit: 'MINUTES')
      }

      steps {
        withCredentials([
          usernamePassword(credentialsId: '63715168-c881-45f2-a269-873208bf331e', passwordVariable: 'AWS_SECRET', usernameVariable: 'AWS_KEY')
        ]) {
        sh '''
          cd "${WORK_SUB_DIR}"
          terraform init        
          terraform apply -auto-approve -var access_key=${AWS_KEY} -var secret_key=${AWS_SECRET}
        '''
        }
      }
    }

    stage('packaging-image') {
      options {
        timeout(time: 150, unit: 'MINUTES')
      }

      steps {
        sh '''#!/usr/bin/env bash
          echo "Shell Process ID: $$"
          set -o errexit
          readonly ROLE_LIST=(
            web
            app
          )
          cd "${WORK_SUB_DIR}"
          for role_name in "${ROLE_LIST[@]}"
          do
            bash scripts/packer-build.sh $role_name
          done
        '''
      }
    }
  }

  post {
    cleanup {
      sh '''#!/usr/bin/env bash
        echo "Shell Process ID: $$"
        cd "${WORK_SUB_DIR}"
        bash scripts/post-cleanup.sh
      '''
    }
  }
}
